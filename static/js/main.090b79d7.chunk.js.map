{"version":3,"sources":["ActivityForm.js","EditableActivity.js","ListOfActivities.js","ScheduleActivity.js","CreateActivity.js","App.js","reportWebVitals.js","index.js"],"names":["ActivityForm","state","id","props","uuidv4","activityName","date","startTime","endTime","numMaxGuests","handleSubmit","e","preventDefault","onFormSubmit","handleNameChange","setState","target","value","handleDateChange","handleStartTimeChange","handleEndTimeChange","handleMaxGuestsChange","buttonText","this","className","onSubmit","type","name","placeholder","onChange","onClick","onFormClose","to","role","Component","EditableActivity","handleDelete","onDeleteActivity","handleFormEdit","openForm","activity","startTimetext","moment","format","endTimetext","ListOfActivities","editFormOpen","activityToEdit","activityId","handleFormClose","handleFormSubmit","activityObj","editableActivities","activities","map","editActivityForm","filter","ScheduleActivity","CreateActivity","redirectTo","path","element","replace","App","handleCreateActivity","createActivity","console","log","concat","currentState","updateActivity","Object","assign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.090b79d7.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ActivityForm extends Component {\r\n    state = {\r\n        id: this.props.id || uuidv4(),\r\n        activityName: this.props.activityName || '',\r\n        date: this.props.date || '',\r\n        startTime: this.props.startTime || '',\r\n        endTime: this.props.endTime || '',\r\n        numMaxGuests: this.props.numMaxGuests || 0\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.onFormSubmit) {\r\n            this.props.onFormSubmit({\r\n                id: this.state.id,\r\n                activityName: this.state.activityName,\r\n                date: this.state.date,\r\n                startTime: this.state.startTime,\r\n                endTime: this.state.endTime,\r\n                numMaxGuests: this.state.numMaxGuests\r\n            })\r\n        }\r\n    }\r\n    handleNameChange = (e) => {\r\n        this.setState({ activityName: e.target.value })\r\n    }\r\n    handleDateChange = (e) => {\r\n        this.setState({ date: e.target.value })\r\n    }\r\n    handleStartTimeChange = (e) => {\r\n        this.setState({ startTime: e.target.value })\r\n    }\r\n    handleEndTimeChange = (e) => {\r\n        this.setState({ endTime: e.target.value })\r\n    }\r\n    handleMaxGuestsChange = (e) => {\r\n        this.setState({ numMaxGuests: e.target.value })\r\n    }\r\n    render() {\r\n        const buttonText = this.props.id ? 'Update' : 'Create';\r\n        return (\r\n            <form \r\n                className='create-activity-form'\r\n                onSubmit={this.handleSubmit}>\r\n                <div className='field'>\r\n                    <label className='activity-name-label'>Name: </label>\r\n                    <input \r\n                        type='text' \r\n                        name='activity name' \r\n                        placeholder='Enter Name of the Acitivity' \r\n                        value={this.state.activityName} \r\n                        onChange={this.handleNameChange} />\r\n                </div>\r\n                <div className='field'>\r\n                    <label className='activity-date-label'>Date: </label>\r\n                    <input \r\n                        type='date' \r\n                        name='activity date' \r\n                        value={this.state.date}\r\n                        onChange={this.handleDateChange} />\r\n                </div>\r\n                <div className='field'>\r\n                    <label className='activity-start-time-label'>Start Time: </label>\r\n                    <input \r\n                        type='time' \r\n                        name='activity start time' \r\n                        value={this.state.startTime}\r\n                        onChange={this.handleStartTimeChange} />\r\n                </div>\r\n                <div className='field'>\r\n                    <label className='activity-end-time-label'>End Time: </label>\r\n                    <input \r\n                        type='time' \r\n                        name='activity end time' \r\n                        value={this.state.endTime}\r\n                        onChange={this.handleEndTimeChange} />\r\n                </div>\r\n                <div className='field'>\r\n                    <label className='activity-name-label'>Maximum Number of Guests: </label>\r\n                    <input \r\n                        type='number' \r\n                        name='activity maximum number of guests' \r\n                        value={this.state.numMaxGuests}\r\n                        onChange={this.handleMaxGuestsChange} />\r\n                </div>\r\n                <div className='buttons-segment'>\r\n                    <button className='basic-button'>\r\n                        {buttonText} Activity\r\n                    </button>\r\n                    {this.props.id ? \r\n                        <button className='basic-button' onClick={this.props.onFormClose}>\r\n                            Cancel\r\n                        </button>\r\n                    :\r\n                        <Link\r\n                            to='/'\r\n                            className='cancel-activity'\r\n                            role='button' >\r\n                                Cancel\r\n                        </Link>}        \r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActivityForm;","import { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass EditableActivity extends Component {\r\n    handleDelete = () => {\r\n        this.props.onDeleteActivity(this.props.id)\r\n    }\r\n    handleFormEdit = () => {\r\n        this.props.openForm(this.props.id);\r\n    }\r\n    render() {\r\n        const activity = this.props;\r\n        const startTimetext = moment(activity.startTime, 'HH:mm').format('h:mm a');\r\n        const endTimetext = moment(activity.endTime, 'HH:mm').format('h:mm a');        \r\n        return (\r\n            <div className='content col'>\r\n                <div className='activities-content'>\r\n                    <h2 className='activity-name'>{this.props.activityName}</h2>\r\n                    <div className='activity-info'>\r\n                            <Moment format='dddd, MMMM D, Y'>\r\n                                {activity.date}\r\n                            </Moment>\r\n                    </div>\r\n                    <div className='activity-time'>\r\n                        {startTimetext} - {endTimetext}\r\n                    </div>\r\n                    <div className='activity-guests'>\r\n                        <span className='guest-icon'></span>\r\n                        {this.props.numMaxGuests}\r\n                    </div>\r\n                    \r\n                    {/* <div className='activity-date'>{activity.date}</div>\r\n                    <div className='activity-start-time'>{activity.startTime}</div>\r\n                    <div className='activity-end-time'>{activity.endTime}</div> */}\r\n                </div>\r\n                <div className=\"extra-content\">\r\n                    <button \r\n                        className=\"extra-content-buttons edit-icon\"\r\n                        onClick={this.handleFormEdit}>\r\n                    </button>\r\n                    <button \r\n                        className=\"extra-content-buttons trash-icon\"\r\n                        onClick={this.handleDelete}>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditableActivity;","import { Component } from \"react\";\r\nimport ActivityForm from \"./ActivityForm\";\r\nimport EditableActivity from \"./EditableActivity\";\r\n\r\nclass ListOfActivities extends Component {\r\n    state = {\r\n        editFormOpen: false,\r\n        activityToEdit: null\r\n    }\r\n    handleFormEdit = (activityId) => {\r\n        this.setState({\r\n            editFormOpen: true,\r\n            activityToEdit: activityId\r\n        })\r\n    }\r\n    handleFormClose = () => {\r\n        this.setState({ editFormOpen: false })\r\n    }\r\n    handleFormSubmit = (activityObj) => {\r\n        this.props.onFormSubmit(activityObj);\r\n        this.handleFormClose();\r\n    }\r\n    render() {\r\n        const editableActivities = this.props.activities.map((activity) => (\r\n            <EditableActivity\r\n                key={activity.id}\r\n                id={activity.id}\r\n                activityName={activity.activityName}\r\n                date={activity.date}\r\n                startTime={activity.startTime}\r\n                endTime={activity.endTime}\r\n                numMaxGuests={activity.numMaxGuests}\r\n                onDeleteActivity={this.props.onDeleteActivity}\r\n                openForm={this.handleFormEdit} />\r\n        ))\r\n        const editActivityForm = this.props.activities.filter((activity) => {\r\n            return activity.id === this.state.activityToEdit\r\n        });\r\n        if(this.state.editFormOpen) {\r\n            return (\r\n                <div className=\"edit-activity-main\">\r\n                    <ActivityForm\r\n                        id={this.state.activityToEdit}\r\n                        activityName={editActivityForm[0].activityName}\r\n                        date={editActivityForm[0].date}\r\n                        startTime={editActivityForm[0].startTime}\r\n                        endTime={editActivityForm[0].endTime}\r\n                        numMaxGuests={editActivityForm[0].numMaxGuests}\r\n                        onFormSubmit={this.handleFormSubmit}\r\n                        onFormClose={this.handleFormClose} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className='list-of-activities row'>\r\n                    {editableActivities}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListOfActivities;","import { Link } from 'react-router-dom';\r\nimport ListOfActivities from './ListOfActivities';\r\nimport { Component } from 'react';\r\n\r\nclass ScheduleActivity extends Component {\r\n  render(){\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <div className='left-container'>\r\n            <h1 className='header-title main-header'>Schedule Activities</h1>\r\n          </div>\r\n          <div className='right-container'>\r\n            <Link to='/createActivity' className='create-activity-link'> \r\n              New Activity\r\n            </Link>\r\n          </div>\r\n        </header>\r\n        <main className='App-main'>\r\n          <ListOfActivities \r\n            className='activity container'\r\n            activities={this.props.activities}\r\n            onDeleteActivity={this.props.onDeleteActivity}\r\n            onFormSubmit={this.props.onFormSubmit} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduleActivity;\r\n","import { Component } from \"react\";\r\nimport { Link, Routes, Route } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router\";\r\nimport ActivityForm from \"./ActivityForm\";\r\n\r\nclass CreateActivity extends Component {\r\n    state = { \r\n        redirectTo: false \r\n    };\r\n    handleSubmit = (activityObj) => {\r\n        this.props.onFormSubmit(activityObj)\r\n        this.setState({ redirectTo: true})\r\n    }\r\n    render() {\r\n        if (this.state.redirectTo) {\r\n            return (\r\n                <Routes>\r\n                    <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\r\n                </Routes>\r\n            )\r\n          } else{\r\n            return (\r\n                <div className='create-activity'>\r\n                    <header className=\"App-header\">\r\n                        <Link\r\n                            to='/'\r\n                            className='close-create-activity'>\r\n                                Close\r\n                        </Link>\r\n                        <div className=\"container\">\r\n                            <h1 className=\"header-title\">Activity Details</h1>\r\n                        </div>\r\n                    </header>\r\n                    <main className='create-activity-main'>\r\n                        <ActivityForm \r\n                            onFormSubmit={this.handleSubmit}\r\n                            />\r\n                    </main>\r\n                </div>\r\n            )\r\n          }\r\n\r\n    }\r\n}\r\n\r\nexport default CreateActivity;","import './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { Component } from 'react';\nimport ScheduleActivity from './ScheduleActivity';\nimport CreateActivity from './CreateActivity';\n\nclass App extends Component {\n  state= {\n    activities: [\n      {\n        id: 1,\n        activityName: 'Walking Tour',\n        date: '2021-10-10',\n        startTime: '11:00',\n        endTime: '13:00',\n        numMaxGuests: 10\n      },\n      {\n        id: 2,\n        activityName: 'Walking Tour',\n        date: '2021-10-10',\n        startTime: '11:00',\n        endTime: '13:00',\n        numMaxGuests: 10\n      },\n      {\n        id: 3,\n        activityName: 'Walking Tour',\n        date: '2021-10-10',\n        startTime: '11:00',\n        endTime: '13:00',\n        numMaxGuests: 10\n      },\n      {\n        id: 4,\n        activityName: '4 Tour',\n        date: '2021-10-10',\n        startTime: '11:00',\n        endTime: '13:00',\n        numMaxGuests: 10\n      },\n      {\n        id: 5,\n        activityName: '5 Tour',\n        date: '2021-10-10',\n        startTime: '11:00',\n        endTime: '13:00',\n        numMaxGuests: 10\n      }\n    ]\n  }\n  handleCreateActivity = (activityObj) => {\n    this.createActivity(activityObj);\n  }\n  createActivity = (activityObj) => {\n    console.log(activityObj)\n    this.setState({\n      activities: this.state.activities.concat(activityObj)\n    })\n  }\n  onDeleteActivity = (activityId) => {\n    this.setState((currentState) => ({\n      activities: currentState.activities.filter((activity) => {\n        return activity.id !== activityId\n      })\n    }))\n  }\n  handleFormSubmit = (activityObj) => {\n    this.updateActivity(activityObj);\n  }\n  updateActivity = (activityObj) => {\n    this.setState({\n      activities: this.state.activities.map((activity) => {\n        if(activity.id === activityObj.id) {\n          return Object.assign({}, activity, {\n            activityName: activityObj.activityName,\n            date: activityObj.date,\n            startTime: activityObj.startTime,\n            endTime: activityObj.endTime,\n            numMaxGuests: activityObj.numMaxGuests\n          });\n        } else {\n          return activity;\n        }\n      })\n    })\n  }\n  render(){\n    return (\n      <Routes>\n        <Route path='/' element={\n          <ScheduleActivity\n            activities={this.state.activities}\n            onDeleteActivity={this.onDeleteActivity}\n            onFormSubmit={this.handleFormSubmit} />} />\n        <Route path='/createActivity' element={\n          <CreateActivity\n            onFormSubmit={this.handleCreateActivity} />} />\n      </Routes>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}